class Solution {
    public int findShortestSubArray(int[] nums) {
        Map<Integer, Integer> leftIndex = new HashMap<>();
        Map<Integer, Integer> rightIndex = new HashMap<>();
        Map<Integer, Integer> count = new HashMap<>();
        int maxFrequency = 0;

        for(int i=0; i<nums.length; i++) {
            if (leftIndex.get(nums[i]) == null) {
               leftIndex.put(nums[i], i); 
            }
            rightIndex.put(nums[i], i);
            count.put(nums[i], count.getOrDefault(nums[i], 0) + 1);
            maxFrequency = Math.max(maxFrequency, count.get(nums[i]));
        }

        int result = nums.length;

        for(int num : nums) {
            if (count.get(num) == maxFrequency) {
                result = Math.min(result, rightIndex.get(num) - leftIndex.get(num) + 1);
            }   
        }

        return result;
    }
}