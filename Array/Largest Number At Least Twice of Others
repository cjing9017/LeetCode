//解法一
class Solution {
    public int dominantIndex(int[] nums) {
        int maxNumIndex = 0;
        for (int i = 1; i < nums.length; i++) {
            maxNumIndex = nums[i] > nums[maxNumIndex] ? i : maxNumIndex;
        }
        for (int i = 0; i < nums.length; i++) {
            if (i != maxNumIndex && nums[i] != 0 && nums[maxNumIndex] / nums[i] < 2) {
                return -1;
            }
        }
        return maxNumIndex;
    }
}

//解法二
class Solution {
    public int dominantIndex(int[] nums) {
        int maxFirst = 0;
        int maxSecond = 0;
        int maxNumIndex = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > maxFirst) {
                maxSecond = maxFirst;
                maxFirst = nums[i];
                maxNumIndex = i;
            } else if (nums[i] > maxSecond) {
                maxSecond = nums[i];
            }
        }
        return maxFirst >= maxSecond * 2 ? maxNumIndex : -1;
    }
}