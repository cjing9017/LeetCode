class Solution {
    public int maxIncreaseKeepingSkyline(int[][] grid) {
        int totalIncrease = 0;
        int[] rowMax = new int[grid.length];
        int[] colMax = new int[grid[0].length];
        //求每一行的最大值
        for (int i = 0; i < grid.length; i++) {
            int max = -1;
            for (int height : grid[i]) {
                max = Math.max(max, height);
            }
            rowMax[i] = max;
        }
        //求每一列的最大值
        for (int i = 0; i < grid[0].length; i++) {
            int max = -1;
            for (int j = 0; j < grid.length; j++) {
                max = Math.max(max, grid[j][i]);
            }
            colMax[i] = max;
        }
        //求最大可增长
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                totalIncrease += (Math.min(rowMax[i], colMax[j]) - grid[i][j]);
            }
        }  
        return totalIncrease;
    }
}