//解法一
class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length == 1){
            return nums[0];
        }//只有一个元素的数组，最大值即为本身
        int maxSum = Integer.MIN_VALUE;//记录最大值
        for(int i=0; i<nums.length; i++){
            int sum = nums[i];//从此节点开始的最大值
            maxSum = sum > maxSum ? sum : maxSum;
            for(int j=i+1; j<nums.length; j++){
                sum += nums[j];
                maxSum = sum > maxSum ? sum : maxSum;
            }
        }
        return maxSum;
    }
}

//解法二
class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length == 1){
            return nums[0];
        }//只有一个元素的数组，最大值即为本身
        int gMaxSum = nums[0];//全局最优解
        int lMaxSum = nums[0];//局部最优解
        for(int i=1; i<nums.length; i++){
            lMaxSum = lMaxSum+nums[i] > nums[i] ? lMaxSum+nums[i] : nums[i];
            gMaxSum = lMaxSum > gMaxSum ? lMaxSum : gMaxSum;
        }
        return gMaxSum;
    }
}