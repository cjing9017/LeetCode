class Solution {
    public int[][] generateMatrix(int n) {
        int[][] result = new int[n][n];
        boolean[][] visited = new boolean[n][n];
        int cnt = 0;
        int[][] step = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        int stepIndex = 0;
        int row = 0;
        int col = 0;
        while (cnt++ < n * n) {
            result[row][col] = cnt;
            visited[row][col] = true;
            int tempRow = row + step[stepIndex][0];
            int tempCol = col + step[stepIndex][1];
            if (tempRow >= 0 && tempRow < n &&
            	tempCol >= 0 && tempCol < n &&
            	!visited[tempRow][tempCol]) {
            	row = tempRow;
            	col = tempCol;
            } else {
            	stepIndex = (stepIndex + 1) % step.length;
            	row += step[stepIndex][0];
            	col += step[stepIndex][1];
            }
        }
        return result;
    }
}