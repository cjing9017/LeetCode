class Solution {
    public boolean exist(char[][] board, String word) {
        if ("".equals(word)) {
            return true;
        }
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == word.charAt(0) && 
                   existWord(board, word, i, j, 0)) {
                    return true;
                }
            }
        }
        return false;
    }
    
    private boolean existWord(char[][] board, String word, int row, int col, int pos) {
        if (pos == word.length()) {
            return true;
        }
        if (row < 0 || row >= board.length || col < 0 || 
            col >= board[row].length || board[row][col] != word.charAt(pos)) {
            return false;
        }
        board[row][col] ^= (1 << 8);
        boolean res = existWord(board, word, row + 1, col, pos + 1) ||
            existWord(board, word, row - 1, col, pos + 1) ||
            existWord(board, word, row, col + 1, pos + 1) ||
            existWord(board, word, row, col - 1, pos + 1);
        board[row][col] ^= (1 << 8);
        return res;
    }
}