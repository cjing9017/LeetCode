class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new ArrayList<>();
        
        find(result, new ArrayList<Integer>(), k, n, 1);
        
        return result;
    }
    
    private void find(List<List<Integer>> result, List<Integer> temp,
                     int k, int n, int start) {
        if (n < 0 || temp.size() > k) {
            return;
        }
        if (temp.size() == k && n == 0) {
            result.add(new ArrayList<>(temp));
            return;
        }
        
        for (int i = start; i <= 9; i++) {
            if (i > n) {
                return;
            }
            temp.add(i);
            find(result, temp, k, n - i, i + 1);
            temp.remove(temp.size() - 1);
        }
    }
}