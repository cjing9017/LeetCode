/*
// Employee info
class Employee {
    // It's the unique id of each node;
    // unique id of this employee
    public int id;
    // the importance value of this employee
    public int importance;
    // the id of direct subordinates
    public List<Integer> subordinates;
};
*/
class Solution {
    Map<Integer, Integer> table = new HashMap<>();
    public int getImportance(List<Employee> employees, int id) {
        int result = 0;
        for (int i = 0; i < employees.size(); i++) {
            table.put(employees.get(i).id, i);
        }
        return getAllImportance(employees, id);
    }
    private int getAllImportance(List<Employee> employees, int id) {
        int result = 0;
        for (int i = 0; i < employees.get(table.get(id)).subordinates.size(); i++) {
            result += getAllImportance(employees, employees.get(table.get(id)).subordinates.get(i));
        }
        return result + employees.get(table.get(id)).importance;
    }
}