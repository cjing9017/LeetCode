class Solution {
    public int maxPoints(int[][] points) {
        if (points == null) {
            return 0;
        }
        if (points.length <= 2) {
            return points.length;
        }
        
        int result = 0;
        for (int i = 0; i < points.length; i++) {
            int max = 0;
            int overlap = 0;
            Map<String, Integer> map = new HashMap<>();
            for (int j = i + 1; j < points.length; j++) {
                int x = points[j][0] - points[i][0];
                int y = points[j][1] - points[i][1];
                if (x == 0 && y == 0) {
                    overlap++;
                    continue;
                }
                int xyGcd = gcd(x, y);
                x /= xyGcd;
                y /= xyGcd;
                String k = "" + x + y;
                map.put(k, map.getOrDefault(k, 0) + 1);
                max = Math.max(max, map.get(k));
            }
            result = Math.max(result, max + 1 + overlap);
        }
        return result;
    }
    
    public int gcd(int x, int y) {
        if (y == 0) {
            return x;
        }
        return gcd(y, x % y);
    }
}