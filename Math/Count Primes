//解法一（超时）
class Solution {
    public int countPrimes(int n) {
        int cnt = 0;
        for (int i = 2; i < n; i++) {
            cnt = isPrime(i) ? cnt + 1 : cnt;
        }
        return cnt;
    }
    
    private boolean isPrime(int n) {
        for (int i = 2; i * i <= n; i++) {
            if (n % i == 0) return false;
        }
        return n == 1 ? false : true;
    }
}

//解法二
class Solution {
    public int countPrimes(int n) {
        int cnt = 0;
        boolean[] table = new boolean[n];
        for (int i = 2; i < n; i++) {
            if (!table[i]) {
                cnt = isPrime(i) ? cnt + 1 : cnt;
                for (int j = 2; j * i < n; j++) table[j * i] = true;
            }
        }
        return cnt;
    }
    
    private boolean isPrime(int n) {
        for (int i = 2; i * i <= n; i++) {
            if (n % i == 0) return false;
        }
        return n == 1 ? false : true;
    }
}