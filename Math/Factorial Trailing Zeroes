//解法一（超时）
class Solution {
    public int trailingZeroes(int n) {
        int[] fac = new int[100000]; //计算阶乘后每一位的数字
        fac[0] = 1;
        int index = 1; //计算阶乘后的位数
        int result = 0; //数字尾部0的个数
        for (int i = 2; i <= n; i++) {
            int carry = 0;
            for (int j = 0; j < index; j++) {
                int temp = fac[j] * i + carry;
                fac[j] = temp % 10;
                carry = temp / 10;
            }
            while (carry > 0) {
                fac[index] = carry % 10;
                carry /= 10;
                index++;
            }
        }
        for (int i = 0; i < index; i++) {
            if (fac[i] == 0) result++;
            else break;
        }
        return result;
    }
}
//解法二
class Solution {
    public int trailingZeroes(int n) {
        return n == 0 ? 0 : n / 5 + trailingZeroes(n / 5);
    }
}