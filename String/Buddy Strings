//解法一（超时）
class Solution {
    public boolean buddyStrings(String A, String B) {
        if (A.length() != B.length()) {
            return false;
        }
        for (int i = 0; i < A.length() - 1; i++) {
            for (int j = i + 1; j < A.length(); j++) {
                StringBuilder sb = new StringBuilder(A);
                sb.replace(i, i + 1, "" + A.charAt(j));
                sb.replace(j, j + 1, "" + A.charAt(i));
                if (sb.toString().equals(B)) {
                    return true;
                }
            }
        }
        return false;
    }
}

//解法二
class Solution {
    public boolean buddyStrings(String A, String B) {
        if (A.length() != B.length() || A.length() == 0) {
            return false;
        }
        if (A.equals(B)) {
            int[] letter = new int[26];
            for (int i = 0; i < A.length(); i++) {
                letter[A.charAt(i) - 'a'] += 1;
                if (letter[A.charAt(i) - 'a'] > 1) return true;
            }
            return false;
        }
        int index = 0;
        while (index < A.length() && A.charAt(index) == B.charAt(index)) {
            index++;
        }
        for (int i = index + 1; i < A.length(); i++) {
            if (A.charAt(i) == B.charAt(index)) {
                StringBuilder sb = new StringBuilder(A);
                sb.replace(index, index + 1, "" + A.charAt(i));
                sb.replace(i, i + 1, "" + A.charAt(index));
                if (sb.toString().equals(B)) {
                    return true;
                }
            }
        }
        return false;
    }
}